mutation CreateProductReview($review: ReviewCreateInput!) {
    review: createReview(data: $review) {
        ...reviewContent
    }
}

mutation CreateItemOrder($orderItemData: OrderItemCreateInput!) {
    createOrderItem(data: $orderItemData) {
        id
    }
}

mutation CreateOrder($orderData: OrderCreateInput!) {
    createOrder(data: $orderData) {
        id
    }
}

mutation CreateAccount($email: String!, $password: String!) {
    createAccount(data: { email: $email, password: $password }) {
        id
    }
}

mutation CreateCart {
    createCart(data: {}) {
        id
    }
}

mutation ConnectAccountWithCartAndPublish($accountId: ID!, $cartId: ID!) {
    updateAccount(where: { id: $accountId }, data: { cart: { connect: { id: $cartId } } }) {
        id
    }
    publishAccount(to: PUBLISHED, where: { id: $accountId }) {
        id
    }
    publishCart(to: PUBLISHED, where: { id: $cartId }) {
        id
    }
}

fragment cartContent on Cart {
    id
    cartItems {
        id
    }
}

mutation AddProductToCart($cartId: ID!, $productId: ID!, $sign: String!) {
    updateCart(
        where: { id: $cartId }
        data: { cartItems: { create: { sign: $sign, quantity: 1, product: { connect: { id: $productId } } } } }
    ) {
        ...cartContent
    }
}

mutation UpdateProductQuantityInCartItem($cartId: ID!, $cartItemId: ID!, $quantity: Int!) {
    updateCart(
        where: { id: $cartId }
        data: { cartItems: { update: { where: { id: $cartItemId }, data: { quantity: $quantity } } } }
    ) {
        ...cartContent
    }
}

mutation ClearCartItems($id: ID!) {
    updateCart(where: { id: $id }, data: { cartItems: { set: [] } }) {
        id
    }
}

mutation DeleteCartItem($id: ID!) {
    deleteCartItem(where: { id: $id }) {
        id
    }
}

mutation PublishCartItem($cartItemId: ID!) {
    publishCartItem(to: PUBLISHED, where: { id: $cartItemId }) {
        id
    }
}

mutation PublishCart($cartId: ID!) {
    publishCart(to: PUBLISHED, where: { id: $cartId }) {
        id
    }
}

mutation CreateCartItem($cartId: ID!, $productId: ID!, $sign: String!) {
    create: createCartItem(
        data: { quantity: 1, sign: $sign, cart: { connect: { id: $cartId } }, product: { connect: { id: $productId } } }
    ) {
        quantity
        id
        product {
            name
            price
            images {
                id
                url
            }
            slug
        }
    }
}
